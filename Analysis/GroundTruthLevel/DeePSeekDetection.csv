Language,Class,Code Smell #,Category,Code Smell,Method,Type
Python,Shop,1,Bloaters,Large Class,N/A,"The `Shop` class has too many responsibilities, including handling customer info, promotions, and complaints."
Python,Shop,2,Bloaters,Long Method,long_method,"The `long_method` performs multiple tasks in a single method, making it overly complex."
Python,Shop,3,Dispensables,Dead Code,another_unused_method,The `another_unused_method` is defined but never used in the code.
Python,Shop,4,Dispensables,Dead Code,yet_another_unused_method,The `yet_another_unused_method` is defined but never used in the code.
Python,Shop,5,Object-Orientation Abusers,Speculative Generality,notify_for_promotion,The `notify_for_promotion` method seems to be a placeholder for future functionality.
Python,Shop,6,Object-Orientation Abusers,Speculative Generality,notify_for_discount,The `notify_for_discount` method seems to be a placeholder for future functionality.
Python,Shop,7,Object-Orientation Abusers,Speculative Generality,notify_for_new_arrivals,The `notify_for_new_arrivals` method seems to be a placeholder for future functionality.
Python,Shop,8,Object-Orientation Abusers,Speculative Generality,apply_discount,The `apply_discount` method seems to be a placeholder for future functionality.
Python,Shop,9,Object-Orientation Abusers,Speculative Generality,apply_loyalty_points,The `apply_loyalty_points` method seems to be a placeholder for future functionality.
Python,Shop,10,Object-Orientation Abusers,Speculative Generality,ask_for_receipt,The `ask_for_receipt` method seems to be a placeholder for future functionality.
Python,Shop,11,Couplers,Middle Man,middleman_method,The `middleman_method` only delegates to another method without adding value.
Python,Shop,12,Couplers,Message Chains,chain_of_methods,"The `chain_of_methods` initiates a chain of method calls, creating unnecessary dependencies."
Python,Shop,13,Dispensables,Data Class,N/A,"The `Shop` class primarily holds data with minimal behavior, making it a data class."
Python,Shop,14,Bloaters,Data Clumps,update_contact_info,The `update_contact_info` method groups related data fields that could be encapsulated in a separate class.
Python,Shop,15,Bloaters,Primitive Obsession,__init__,The `__init__` method uses primitive types for customer info instead of encapsulating them in a class.
Python,Shop,16,Object-Orientation Abusers,Switch Statements,handle_complaint,"The `handle_complaint` method uses repetitive if-else statements, which could be refactored."
Python,Shop,17,Dispensables,Duplicate Code,handle_complaint,The `handle_complaint` method contains redundant calls to `calm_customer_down`.
Python,Shop,18,Bloaters,Long Parameter List,update_contact_info,"The `update_contact_info` method has too many parameters, making it difficult to maintain."
Python,Shop,19,Dispensables,Dead Code,order_with_unnecessary_details,The `order_with_unnecessary_details` method is defined but its functionality is redundant or unused.
Language,Class,Code Smell #,Category,Code Smell,Method,Type
Python,Pizza,1,Bloaters,Large Class,N/A,"The `Pizza` class has too many responsibilities, including handling customer info, promotions, and complaints."
Python,Pizza,2,Bloaters,Long Method,long_method,"The `long_method` performs multiple tasks in a single method, making it overly complex."
Python,Pizza,3,Bloaters,Long Parameter List,order_with_unnecessary_details,"The `order_with_unnecessary_details` method has too many parameters, making it difficult to maintain."
Python,Pizza,4,Dispensables,Duplicate Code,duplicate_method,The `duplicate_method` contains redundant code by setting the topping twice.
Python,Pizza,5,Dispensables,Dead Code,another_unused_method,The `another_unused_method` is defined but never used in the code.
Python,Pizza,6,Dispensables,Dead Code,yet_another_unused_method,The `yet_another_unused_method` is defined but never used in the code.
Python,Pizza,7,Dispensables,Dead Code,refused_bequest,The `refused_bequest` method is defined but never used in the code.
Python,Pizza,8,Object-Orientation Abusers,Refused Bequest,refused_bequest,The `refused_bequest` method in the `Pizza` class is inherited but not used by subclasses.
Python,Pizza,9,Couplers,Middle Man,middleman_method,The `middleman_method` only delegates to another method without adding value.
Python,Pizza,10,Couplers,Message Chains,chain_of_methods,"The `chain_of_methods` initiates a chain of method calls, creating unnecessary dependencies."
Python,Pizza,11,Dispensables,Data Class,N/A,"The `Pizza` class primarily holds data with minimal behavior, making it a data class."
Python,Pizza,12,Bloaters,Data Clumps,update_customer_info,The `update_customer_info` method groups related data fields that could be encapsulated in a separate class.
Python,Pizza,13,Bloaters,Primitive Obsession,__init__,The `__init__` method uses primitive types for customer info instead of encapsulating them in a class.
Python,Pizza,14,Object-Orientation Abusers,Speculative Generality,notify_for_promotion,The `notify_for_promotion` method seems to be a placeholder for future functionality.
Python,Pizza,15,Object-Orientation Abusers,Speculative Generality,notify_for_discount,The `notify_for_discount` method seems to be a placeholder for future functionality.
Python,Pizza,16,Object-Orientation Abusers,Speculative Generality,notify_for_new_arrivals,The `notify_for_new_arrivals` method seems to be a placeholder for future functionality.
Python,Pizza,17,Object-Orientation Abusers,Speculative Generality,apply_discount,The `apply_discount` method seems to be a placeholder for future functionality.
Python,Pizza,18,Object-Orientation Abusers,Speculative Generality,apply_loyalty_points,The `apply_loyalty_points` method seems to be a placeholder for future functionality.
Python,Pizza,19,Object-Orientation Abusers,Speculative Generality,ask_for_receipt,The `ask_for_receipt` method seems to be a placeholder for future functionality.
Language,Class,Code Smell #,Category,Code Smell,Method,Type
Python,Drink,1,Bloaters,Primitive Obsession,create_order,Using a primitive (string) to represent drink type instead of a dedicated class or enum.
Python,Drink,2,Dispensables,Data Class,N/A,"The `Drink` class primarily holds data (drink_type) with minimal behavior, making it a data class."
Python,Drink,3,Object-Orientation Abusers,Temporary Field,create_order,"The `drink_type` field is set after initialization and not properly validated, acting as a temporary field."
Language,Class,Code Smell #,Category,Code Smell,Method,Type
Python,Customer,1,Bloaters,Large Class,N/A,"The `Customer` class handles multiple responsibilities (ordering, complaints, promotions, contact updates)."
Python,Customer,2,Bloaters,Long Parameter List,order_with_unnecessary_details,"The `order_with_unnecessary_details` calls `order_pizza` with excessive parameters, violating method definition."
Python,Customer,3,Bloaters,Primitive Obsession,update_contact_info,Uses primitive types for customer info instead of encapsulating them in a dedicated class.
Python,Customer,4,Bloaters,Data Clumps,update_contact_info,Groups related customer data fields that could be encapsulated in a separate class.
Python,Customer,5,Dispensables,Dead Code,another_unused_method,The method is defined but never used.
Python,Customer,6,Dispensables,Dead Code,yet_another_unused_method,The method is defined but never used.
Python,Customer,7,Dispensables,Duplicate Code,duplicate_complaint,Repeated calls to `self.complain` with identical arguments.
Python,Customer,8,Object-Orientation Abusers,Switch Statements,handle_complaint,Uses a chain of if-else statements to handle complaints.
Python,Customer,9,Object-Orientation Abusers,Refused Bequest,refused_bequest,"Empty method inherited but not used, indicating a refusal of inheritance."
Python,Customer,10,Object-Orientation Abusers,Temporary Field,__init__,"Fields like `first_name`, `email` are initialized as `None` and set later, risking inconsistent states."
Python,Customer,11,Couplers,Message Chains,chain_of_methods,"Calls a deep chain `pizza_shop.casher.chef.clean_kitchen()`, creating tight coupling."
Python,Customer,12,Couplers,Middle Man,middleman_method,Delegates through `middle_method` to `real_method` without adding value.
Python,Customer,13,Couplers,Inappropriate Intimacy,access_internal_details,Directly accesses internal details of `pizza_shop.casher.chef.busy`.
Python,Customer,14,Object-Orientation Abusers,Speculative Generality,notify_for_promotion,"Placeholder method with minimal implementation, likely meant for future use."
Python,Customer,15,Object-Orientation Abusers,Speculative Generality,apply_discount,"Placeholder method with minimal implementation, likely meant for future use."
Python,Customer,16,Change Preventers,Divergent Change,update_contact_info,"Changing customer info requires modifying multiple methods (e.g., `update_name`, `update_address`)."
Language,Class,Code Smell #,Category,Code Smell,Method,Type
Python,Chef,1,Bloaters,Large Class,N/A,"The `Chef` class handles multiple responsibilities (baking, cleaning, customer info, promotions)."
Python,Chef,2,Bloaters,Long Method,long_method,"The `long_method` performs multiple tasks in a single method, making it overly complex."
Python,Chef,3,Bloaters,Primitive Obsession,update_contact_info,Uses primitive types for customer info instead of encapsulating them in a dedicated class.
Python,Chef,4,Bloaters,Data Clumps,update_contact_info,Groups related customer data fields that could be encapsulated in a separate class.
Python,Chef,5,Dispensables,Dead Code,another_unused_method,The method is defined but never used.
Python,Chef,6,Dispensables,Dead Code,yet_another_unused_method,The method is defined but never used.
Python,Chef,7,Dispensables,Duplicate Code,duplicate_method,Repeated calls to `self.bake_pizza` with identical arguments.
Python,Chef,8,Object-Orientation Abusers,Switch Statements,handle_complaint,Uses a chain of if-else statements to handle complaints.
Python,Chef,9,Object-Orientation Abusers,Refused Bequest,refused_bequest,"Empty method inherited but not used, indicating a refusal of inheritance."
Python,Chef,10,Object-Orientation Abusers,Temporary Field,__init__,"Fields like `first_name`, `email` are initialized as `None` and set later, risking inconsistent states."
Python,Chef,11,Couplers,Middle Man,middleman_method,Delegates through `middle_method` to `real_method` without adding value.
Python,Chef,12,Couplers,Message Chains,chain_of_methods,"Calls a chain of methods (`clean_kitchen`), creating unnecessary dependencies."
Python,Chef,13,Object-Orientation Abusers,Speculative Generality,notify_for_promotion,"Placeholder method with minimal implementation, likely meant for future use."
Python,Chef,14,Object-Orientation Abusers,Speculative Generality,apply_discount,"Placeholder method with minimal implementation, likely meant for future use."
Python,Chef,15,Change Preventers,Divergent Change,update_contact_info,"Changing customer info requires modifying multiple methods (e.g., `update_name`, `update_address`)."
Python,Chef,16,Dispensables,Data Class,N/A,"The `Chef` class primarily holds data with minimal behavior, making it a data class."
Python,Chef,17,Bloaters,Long Parameter List,order_with_unnecessary_details,"The method has too many parameters, making it difficult to maintain."
Python,Chef,18,Dispensables,Dead Code,order_with_unnecessary_details,The method is defined but its functionality is redundant or unused.
Language,Class,Code Smell #,Category,Code Smell,Method,Type
Python,Cashier,1,Bloaters,Data Clumps,update_contact_info,"Related fields (first_name, last_name, address, etc.) could be encapsulated into a Customer class"
Python,Cashier,2,Bloaters,Long Method,long_method,"Method handles multiple tasks (taking orders, hurrying chef, calming customer, etc.) in one place"
Python,Cashier,3,Bloaters,Long Parameter List,order_with_unnecessary_details,"Method has excessive parameters (pizza_type, size, crust_type, toppings, etc.)"
Python,Cashier,4,Object-Orientation Abusers,Switch Statements,handle_complaint,"Repeated if-else chain for complaints, all leading to the same action"
Python,Cashier,5,Object-Orientation Abusers,Temporary Field,N/A,Fields like temp_discount_code and temp_order_note are only used under specific conditions
Python,Cashier,6,Object-Orientation Abusers,Refused Bequest,refused_bequest,Empty method inherited but not used
Python,Cashier,7,Dispensables,Dead Code,another_unused_method,Unused method with no functionality
Python,Cashier,8,Dispensables,Dead Code,yet_another_unused_method,Unused method with no functionality
Python,Cashier,9,Dispensables,Duplicate Code,duplicate_method,"Repeated calls to take_order(""Cheese"")"
Python,Cashier,10,Couplers,Middle Man,middleman_method,"Method only delegates to middle_method, which further delegates to real_method"
Python,Cashier,11,Couplers,Feature Envy,access_internal_details,Directly accesses internal chef.busy field instead of encapsulating behavior
Python,Cashier,12,Change Preventers,Shotgun Surgery,"update_name, update_address, etc.",Multiple methods updating parts of customer info; changes require modifying all methods
Python,Cashier,13,Bloaters,Large Class,N/A,"Class handles orders, customer info, discounts, notifications, complaints, and internal delegation logic"
Language,Class,Code Smell #,Category,Code Smell,Method,Type
Java,Shop,1,Bloaters,Large Class,N/A,"The `Shop` class handles multiple responsibilities (order handling, customer info, promotions, complaints)."
Java,Shop,2,Bloaters,Primitive Obsession,updateContactInfo,Uses primitive types for customer info instead of encapsulating them in a dedicated class.
Java,Shop,3,Bloaters,Data Clumps,updateContactInfo,Groups related customer data fields that could be encapsulated in a `CustomerInfo` class.
Java,Shop,4,Dispensables,Dead Code,anotherUnusedMethod,The method is defined but never used.
Java,Shop,5,Object-Orientation Abusers,Switch Statements,handleComplaint,Uses a chain of `if-else` statements to handle complaints.
Java,Shop,6,Object-Orientation Abusers,Temporary Field,constructor,"Fields like `firstName`, `email` are initialized as `null` and set later, risking inconsistent states."
Java,Shop,7,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Placeholder method with minimal implementation, likely meant for future use."
Java,Shop,8,Object-Orientation Abusers,Speculative Generality,applyDiscount,"Placeholder method with minimal implementation, likely meant for future use."
Java,Shop,9,Change Preventers,Divergent Change,updateContactInfo,"Changing customer info requires modifying multiple methods (e.g., `updateName`, `updateAddress`)."
Java,Shop,10,Dispensables,Data Class,N/A,"The class primarily holds data (e.g., `firstName`, `email`) with trivial methods."
Java,Shop,11,Bloaters,Long Parameter List,updateContactInfo,"The method has 5 parameters, which could be refactored into a `CustomerInfo` object."
Java,Shop,12,Dispensables,Dead Code,anotherUnusedMethod,The method is defined but its functionality is redundant or unused.
Language,Class,Code Smell #,Category,Code Smell,Method,Type
Java,Pizza,1,Bloaters,Large Class,N/A,"The `Pizza` class handles pizza attributes, customer info, promotions, and complaints, violating SRP."
Java,Pizza,2,Bloaters,Long Method,longMethod,The `longMethod` performs multiple unrelated tasks in a single method.
Java,Pizza,3,Bloaters,Primitive Obsession,updateCustomerInfo,Uses primitive types (String) for customer info instead of a dedicated `Customer` class.
Java,Pizza,4,Bloaters,Data Clumps,updateCustomerInfo,Groups customer data fields that should be encapsulated in a `Customer` class.
Java,Pizza,5,Bloaters,Long Parameter List,updateCustomerInfo,"The method has 5 parameters, which could be replaced with a `Customer` object."
Java,Pizza,6,Dispensables,Dead Code,anotherUnusedMethod,The method is defined but never used.
Java,Pizza,7,Dispensables,Dead Code,yetAnotherUnusedMethod,The method is defined but never used.
Java,Pizza,8,Dispensables,Duplicate Code,duplicateMethod,"Repeated calls to `setTopping(""Cheese"")` with identical arguments."
Java,Pizza,9,Object-Orientation Abusers,Switch Statements,handleComplaint,Uses a chain of `if-else` statements to handle complaints.
Java,Pizza,10,Object-Orientation Abusers,Refused Bequest,refusedBequest,"Empty method in `Pizza`, indicating subclasses may refuse the inheritance."
Java,Pizza,11,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Placeholder method with minimal implementation, likely meant for future use."
Java,Pizza,12,Object-Orientation Abusers,Speculative Generality,applyDiscount,"Placeholder method with minimal implementation, likely meant for future use."
Java,Pizza,13,Couplers,Middle Man,middlemanMethod,Delegates through `middleMethod` to `realMethod` without adding value.
Java,Pizza,14,Couplers,Message Chains,chainOfMethods,"Calls `updateCustomerAddress`, creating unnecessary dependencies."
Java,Pizza,15,Couplers,Inappropriate Intimacy,accessInternalDetails,"Directly exposes internal fields (`size`, `doughType`, `topping`)."
Java,Pizza,16,Change Preventers,Divergent Change,updateCustomerInfo,"Changing customer info requires modifying multiple methods (e.g., `updateCustomerName`, `updateCustomerAddress`)."
Java,CheesePizza,17,Object-Orientation Abusers,Refused Bequest,handleComplaint,"Overrides `handleComplaint` but does not use all inherited methods, indicating refusal of inheritance."
Language,Class,Code Smell #,Category,Code Smell,Method,Type
Java,Drink,1,Bloaters,Data Clumps,updateCustomerInfo,"Related fields (customerFirstName, customerLastName, etc.) could be encapsulated into a Customer class"
Java,Drink,2,Bloaters,Long Method,longMethod,"Method handles multiple tasks (order creation, customer info updates, notifications, etc.) in one place"
Java,Drink,3,Bloaters,Long Parameter List,updateCustomerInfo,"Method has excessive parameters (firstName, lastName, address, phoneNumber, email)"
Java,Drink,4,Object-Orientation Abusers,Switch Statements,handleComplaint,"Repeated if-else chain for complaints, leading to similar actions"
Java,Drink,5,Dispensables,Dead Code,anotherUnusedMethod,Unused method with no functionality
Java,Drink,6,Dispensables,Dead Code,yetAnotherUnusedMethod,Unused method with no functionality
Java,Drink,7,Dispensables,Duplicate Code,duplicateMethod,"Repeated calls to createOrder(""Cola"")"
Java,Drink,8,Couplers,Middle Man,middlemanMethod,"Method only delegates to middleMethod, which further delegates to realMethod"
Java,Drink,9,Couplers,Message Chains,chainOfMethods,"Method initiates a chain of calls (this.updateCustomerAddress(""456 Avenue""))"
Java,Drink,10,Change Preventers,Shotgun Surgery,"updateCustomerName, updateCustomerAddress, etc.",Multiple methods updating parts of customer info; changes require modifying all methods
Java,Drink,11,Bloaters,Large Class,N/A,"Class handles drink orders, customer info, notifications, complaints, and internal delegation logic"
Java,Drink,12,Object-Orientation Abusers,Refused Bequest,refusedBequest,Empty method inherited but not used
Java,Drink,13,Dispensables,Lazy Class,N/A,Class has minimal functionality and could be merged into a broader order management class
Java,Drink,14,Object-Orientation Abusers,Speculative Generality,"notifyForPromotion, etc.","Unnecessary methods (promotions, discounts) unrelated to core drink functionality"
Language,Class,Code Smell #,Category,Code Smell,Method,Type
Java,Customer,1,Bloaters,Data Clumps,updateContactInfo,"Related fields (firstName, lastName, address, etc.) could be encapsulated into a CustomerInfo class"
Java,Customer,2,Bloaters,Long Method,longComplaintMethod,"Method handles multiple complaints and actions in one place, making it overly complex"
Java,Customer,3,Bloaters,Long Parameter List,updateContactInfo,"Method has excessive parameters (firstName, lastName, address, phoneNumber, email)"
Java,Customer,4,Object-Orientation Abusers,Switch Statements,handleComplaint,"Repeated if-else chain for complaints, all leading to similar actions"
Java,Customer,5,Object-Orientation Abusers,Temporary Field,N/A,Fields like tempDiscountCode and tempOrderNote are only used under specific conditions
Java,Customer,6,Dispensables,Dead Code,anotherUnusedMethod,Unused method with no functionality
Java,Customer,7,Dispensables,Duplicate Code,duplicateComplaint,"Repeated calls to complain(""Pizza is cold"") and complain(""Pizza is late"")"
Java,Customer,8,Couplers,Middle Man,middlemanMethod,"Method only delegates to middleMethod, which further delegates to realMethod"
Java,Customer,9,Couplers,Feature Envy,accessInternalDetails,Directly accesses internal details of PizzaShop (pizzaShop.getCashier().getChef().isBusy())
Java,Customer,10,Change Preventers,Shotgun Surgery,"updateName, updateAddress, etc.",Multiple methods updating parts of customer info; changes require modifying all methods
Java,Customer,11,Bloaters,Large Class,N/A,"Class handles customer info, complaints, notifications, and internal delegation logic"
Java,Customer,12,Object-Orientation Abusers,Speculative Generality,orderWithUnnecessaryDetails,Overly detailed method for placing orders; could be simplified or delegated to a factory
Java,Customer,13,Dispensables,Duplicate Code,handleComplaint,Repeated System.out.println statements for handling complaints
Java,Customer,14,Couplers,Message Chains,chainOfMethods,Method initiates a chain of calls (pizzaShop.getCashier().getChef().cleanKitchen())
Java,Customer,15,Dispensables,Dead Code,refusedBequest,Empty method inherited but not used
Language,Class,Code Smell #,Category,Code Smell,Method,Type
Java,Chef,1,Bloaters,Data Clumps,updateContactInfo,"Related fields (firstName, lastName, address, etc.) could be encapsulated into a Customer/Employee class"
Java,Chef,2,Bloaters,Long Method,longMethod,"Method handles baking, notifications, complaints, and internal delegation in one place"
Java,Chef,3,Bloaters,Long Parameter List,updateContactInfo,"Method has 5 parameters (firstName, lastName, address, phoneNumber, email)"
Java,Chef,4,Object-Orientation Abusers,Switch Statements,handleComplaint,"Repeated if-else chain for complaints, despite similar actions"
Java,Chef,5,Dispensables,Dead Code,anotherUnusedMethod,Unused method with no functionality
Java,Chef,6,Dispensables,Dead Code,yetAnotherUnusedMethod,Unused method with no functionality
Java,Chef,7,Dispensables,Duplicate Code,duplicateMethod,"Repeated calls to bakePizza(""Cheese"")"
Java,Chef,8,Couplers,Middle Man,middlemanMethod,"Method only delegates to middleMethod, which delegates to realMethod"
Java,Chef,9,Couplers,Feature Envy,accessInternalDetails,Directly accesses pizza.getTopping() instead of encapsulating behavior
Java,Chef,10,Change Preventers,Shotgun Surgery,"updateName, updateAddress, etc.",Multiple methods updating parts of customer info; changes require modifying all methods
Java,Chef,11,Bloaters,Large Class,N/A,"Class handles pizza baking, customer info, promotions, discounts, complaints, and delegation logic"
Java,Chef,12,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Methods unrelated to core Chef responsibilities (e.g., promotions, discounts)"
Java,Chef,13,Object-Orientation Abusers,Refused Bequest,refusedBequest,Empty method inherited but not used
Java,Chef,14,Couplers,Message Chains,chainOfMethods,Initiates a chain of calls (this.cleanKitchen())
Language,Class,Code Smell #,Category,Code Smell,Method,Type
Java,Cashier,1,Bloaters,Data Clumps,updateContactInfo,"Related fields (firstName, lastName, address, etc.) could be encapsulated into a Customer class"
Java,Cashier,2,Bloaters,Long Method,longMethod,"Method handles multiple tasks (taking orders, hurrying chef, calming customer, etc.) in one place"
Java,Cashier,3,Object-Orientation Abusers,Switch Statements,handleComplaint,"Repeated if-else chain for complaints, all leading to the same action"
Java,Cashier,4,Dispensables,Dead Code,anotherUnusedMethod,Unused method with no functionality
Java,Cashier,5,Dispensables,Duplicate Code,duplicateMethod,"Repeated calls to takeOrder(""Cheese"")"
Java,Cashier,6,Couplers,Middle Man,middlemanMethod,"Method only delegates to middleMethod, which further delegates to realMethod"
Java,Cashier,7,Couplers,Feature Envy,accessInternalDetails,Directly accesses internal chef.isBusy() instead of encapsulating behavior
Java,Cashier,8,Change Preventers,Shotgun Surgery,"updateName, updateAddress, etc.",Multiple methods updating parts of customer info; changes require modifying all methods
Java,Cashier,9,Bloaters,Large Class,N/A,"Class handles orders, customer info, discounts, notifications, complaints, and internal delegation logic"
Java,Cashier,10,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Methods unrelated to core Cashier responsibilities (e.g., promotions, discounts)"
Java,Cashier,11,Object-Orientation Abusers,Refused Bequest,refusedBequest,Empty method inherited but not used
Java,Cashier,12,Couplers,Message Chains,chainOfMethods,Initiates a chain of calls (this.chef.cleanKitchen())
Language,Class,Code Smell #,Category,Code Smell,Method,Type
JavaScript,Shop,1,Bloaters,Data Clumps,updateContactInfo,"Related fields (firstName, lastName, address, etc.) could be encapsulated into a Customer class"
JavaScript,Shop,2,Bloaters,Long Method,longMethod,"Method handles multiple tasks (updating contact info, notifications, complaints, etc.) in one place"
JavaScript,Shop,3,Bloaters,Long Parameter List,updateContactInfo,"Method has excessive parameters (firstName, lastName, address, phoneNumber, email)"
JavaScript,Shop,4,Object-Orientation Abusers,Switch Statements,handleComplaint,"Repeated if-else chain for complaints, all leading to the same action"
JavaScript,Shop,5,Object-Orientation Abusers,Temporary Field,N/A,Fields like tempDiscountCode and tempOrderNote are only used under specific conditions
JavaScript,Shop,6,Dispensables,Dead Code,anotherUnusedMethod,Unused method with no functionality
JavaScript,Shop,7,Dispensables,Dead Code,yetAnotherUnusedMethod,Unused method with no functionality
JavaScript,Shop,8,Dispensables,Duplicate Code,handleComplaint,Repeated calls to this.casher.calmCustomerDown() for different complaints
JavaScript,Shop,9,Couplers,Middle Man,middlemanMethod,"Method only delegates to middleMethod, which further delegates to realMethod"
JavaScript,Shop,10,Couplers,Feature Envy,accessInternalDetails,Directly accesses internal this.casher.chef.busy field instead of encapsulating behavior
JavaScript,Shop,11,Change Preventers,Shotgun Surgery,"updateName, updateAddress, etc.",Multiple methods updating parts of customer info; changes require modifying all methods
JavaScript,Shop,12,Bloaters,Large Class,N/A,"Class handles orders, customer info, notifications, complaints, and internal delegation logic"
JavaScript,Shop,13,Object-Orientation Abusers,Speculative Generality,createPizza,Overly complex method for creating pizza types; could be simplified or delegated to a factory
JavaScript,Shop,14,Dispensables,Duplicate Code,orderWithUnnecessaryDetails,Repeated calls to updateContactInfo and applyDiscount in multiple methods
JavaScript,Shop,15,Couplers,Message Chains,chainOfMethods,Method initiates a chain of calls (this.casher.chef.cleanKitchen())
Language,Class,Code Smell #,Category,Code Smell,Method,Type
JavaScript,Pizza,1,Bloaters,Data Clumps,updateCustomerInfo,"Related fields (customerFirstName, customerLastName, etc.) could be encapsulated into a Customer class"
JavaScript,Pizza,2,Bloaters,Long Method,longMethod,"Method handles multiple tasks (setting pizza details, updating customer info, notifications, etc.) in one place"
JavaScript,Pizza,3,Bloaters,Long Parameter List,updateCustomerInfo,"Method has excessive parameters (firstName, lastName, address, phoneNumber, email)"
JavaScript,Pizza,4,Object-Orientation Abusers,Switch Statements,handleComplaint,"Repeated if-else chain for complaints, all leading to similar actions"
JavaScript,Pizza,5,Object-Orientation Abusers,Temporary Field,N/A,Fields like tempDiscountCode and tempOrderNote are only used under specific conditions
JavaScript,Pizza,6,Dispensables,Dead Code,anotherUnusedMethod,Unused method with no functionality
JavaScript,Pizza,7,Dispensables,Dead Code,yetAnotherUnusedMethod,Unused method with no functionality
JavaScript,Pizza,8,Dispensables,Duplicate Code,duplicateMethod,"Repeated calls to setTopping(""Cheese"")"
JavaScript,Pizza,9,Couplers,Middle Man,middlemanMethod,"Method only delegates to middleMethod, which further delegates to realMethod"
JavaScript,Pizza,10,Couplers,Feature Envy,accessInternalDetails,"Directly accesses internal fields (size, doughType, topping) instead of encapsulating behavior"
JavaScript,Pizza,11,Change Preventers,Shotgun Surgery,"updateCustomerName, updateCustomerAddress, etc.",Multiple methods updating parts of customer info; changes require modifying all methods
JavaScript,Pizza,12,Bloaters,Large Class,N/A,"Class handles pizza details, customer info, notifications, complaints, and internal delegation logic"
JavaScript,Pizza,13,Object-Orientation Abusers,Speculative Generality,orderWithUnnecessaryDetails,Overly detailed method for placing orders; could be simplified or delegated to a factory
JavaScript,Pizza,14,Dispensables,Duplicate Code,handleComplaint,Repeated console.log statements for handling complaints
JavaScript,Pizza,15,Couplers,Message Chains,chainOfMethods,"Method initiates a chain of calls (this.updateCustomerAddress(""123 Street""))"
JavaScript,CheesePizza,16,Object-Orientation Abusers,Refused Bequest,handleComplaint,"Overrides parent method but only adds one specific case, potentially violating Liskov Substitution Principle"
JavaScript,Pizza,17,Dispensables,Dead Code,refusedBequest,Empty method inherited but not used
Language,Class,Code Smell #,Category,Code Smell,Method,Type
JavaScript,Drink,1,Dispensables,Lazy Class,N/A,Class has minimal functionality and could potentially be merged into another class
JavaScript,Drink,2,Bloaters,Primitive Obsession,createOrder,Using a primitive (drinkType) to represent the drink type instead of a more expressive construct
JavaScript,Drink,3,Dispensables,Dead Code,N/A,"The class has no unused methods, but the functionality is too minimal, suggesting it might not be needed"
Language,Class,Code Smell #,Category,Code Smell,Method,Type
JavaScript,Customer,1,Bloaters,Large Class,N/A,"The `Customer` class handles multiple responsibilities (ordering, complaints, promotions, contact updates)."
JavaScript,Customer,2,Bloaters,Long Parameter List,orderWithUnnecessaryDetails,"The method `orderWithUnnecessaryDetails` has 6 parameters, violating maintainability."
JavaScript,Customer,3,Bloaters,Primitive Obsession,updateContactInfo,Uses primitive types for customer info instead of encapsulating them in a dedicated class.
JavaScript,Customer,4,Bloaters,Data Clumps,updateContactInfo,Groups related customer data fields that could be encapsulated in a `CustomerInfo` class.
JavaScript,Customer,5,Dispensables,Dead Code,anotherUnusedMethod,The method is defined but never used.
JavaScript,Customer,6,Dispensables,Dead Code,yetAnotherUnusedMethod,The method is defined but never used.
JavaScript,Customer,7,Dispensables,Duplicate Code,duplicateComplaint,Repeated calls to `this.complain` with identical arguments.
JavaScript,Customer,8,Object-Orientation Abusers,Switch Statements,handleComplaint,Uses a chain of `if-else` statements to handle complaints.
JavaScript,Customer,9,Object-Orientation Abusers,Refused Bequest,refusedBequest,"Empty method inherited but not used, indicating a refusal of inheritance."
JavaScript,Customer,10,Object-Orientation Abusers,Temporary Field,constructor,"Fields like `firstName`, `email` are initialized as `null` and set later, risking inconsistent states."
JavaScript,Customer,11,Couplers,Message Chains,chainOfMethods,"Calls `this.Shop.casher.chef.cleanKitchen()`, creating tight coupling."
JavaScript,Customer,12,Couplers,Middle Man,middlemanMethod,Delegates through `middleMethod` to `realMethod` without adding value.
JavaScript,Customer,13,Couplers,Inappropriate Intimacy,accessInternalDetails,Directly accesses internal state `this.Shop.casher.chef.busy`.
JavaScript,Customer,14,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Placeholder method with minimal implementation, likely meant for future use."
JavaScript,Customer,15,Object-Orientation Abusers,Speculative Generality,applyDiscount,"Placeholder method with minimal implementation, likely meant for future use."
JavaScript,Customer,16,Change Preventers,Divergent Change,updateContactInfo,"Changing customer info requires modifying multiple methods (e.g., `updateName`, `updateAddress`)."
JavaScript,Customer,17,Dispensables,Data Class,N/A,"The class primarily holds data (e.g., `firstName`, `email`) with trivial methods."
Language,Class,Code Smell #,Category,Code Smell,Method,Type
JavaScript,Chef,1,Bloaters,Data Clumps,updateContactInfo,"Related fields (firstName, lastName, address, etc.) could be encapsulated into a Customer class"
JavaScript,Chef,2,Bloaters,Long Method,longMethod,"Method handles multiple tasks (baking pizza, updating contact info, notifications, etc.) in one place"
JavaScript,Chef,3,Bloaters,Long Parameter List,updateContactInfo,"Method has excessive parameters (firstName, lastName, address, phoneNumber, email)"
JavaScript,Chef,4,Object-Orientation Abusers,Switch Statements,handleComplaint,"Repeated if-else chain for complaints, all leading to the same action"
JavaScript,Chef,5,Object-Orientation Abusers,Temporary Field,N/A,Fields like tempDiscountCode and tempOrderNote are only used under specific conditions
JavaScript,Chef,6,Dispensables,Dead Code,anotherUnusedMethod,Unused method with no functionality
JavaScript,Chef,7,Dispensables,Dead Code,yetAnotherUnusedMethod,Unused method with no functionality
JavaScript,Chef,8,Dispensables,Duplicate Code,duplicateMethod,"Repeated calls to bakePizza(""Cheese"")"
JavaScript,Chef,9,Couplers,Middle Man,middlemanMethod,"Method only delegates to middleMethod, which further delegates to realMethod"
JavaScript,Chef,10,Couplers,Feature Envy,accessInternalDetails,Directly accesses internal this.pizza field instead of encapsulating behavior
JavaScript,Chef,11,Change Preventers,Shotgun Surgery,"updateName, updateAddress, etc.",Multiple methods updating parts of customer info; changes require modifying all methods
JavaScript,Chef,12,Bloaters,Large Class,N/A,"Class handles pizza baking, customer info, notifications, complaints, and internal delegation logic"
JavaScript,Chef,13,Object-Orientation Abusers,Speculative Generality,orderWithUnnecessaryDetails,Overly detailed method for placing orders; could be simplified or delegated to a factory
JavaScript,Chef,14,Dispensables,Duplicate Code,handleComplaint,Repeated calls to this.cleanKitchen() for different complaints
JavaScript,Chef,15,Couplers,Message Chains,chainOfMethods,Method initiates a chain of calls (this.cleanKitchen())
JavaScript,Chef,16,Dispensables,Dead Code,refusedBequest,Empty method inherited but not used
Language,Class,Code Smell #,Category,Code Smell,Method,Type
JavaScript,Cashier,1,Bloaters,Large Class,N/A,"The `Cashier` class handles multiple responsibilities (taking orders, calming customers, promotions)."
JavaScript,Cashier,2,Bloaters,Long Method,longMethod,"The `longMethod` performs multiple tasks in a single method, making it overly complex."
JavaScript,Cashier,3,Bloaters,Primitive Obsession,updateContactInfo,Uses primitive types for customer info instead of encapsulating them in a dedicated class.
JavaScript,Cashier,4,Bloaters,Data Clumps,updateContactInfo,Groups related customer data fields that could be encapsulated in a `CustomerInfo` class.
JavaScript,Cashier,5,Dispensables,Dead Code,anotherUnusedMethod,The method is defined but never used.
JavaScript,Cashier,6,Dispensables,Dead Code,yetAnotherUnusedMethod,The method is defined but never used.
JavaScript,Cashier,7,Dispensables,Duplicate Code,duplicateMethod,Repeated calls to `this.takeOrder` with identical arguments.
JavaScript,Cashier,8,Object-Orientation Abusers,Switch Statements,handleComplaint,Uses a chain of `if-else` statements to handle complaints.
JavaScript,Cashier,9,Object-Orientation Abusers,Refused Bequest,refusedBequest,"Empty method inherited but not used, indicating a refusal of inheritance."
JavaScript,Cashier,10,Object-Orientation Abusers,Temporary Field,constructor,"Fields like `firstName`, `email` are initialized as `null` and set later, risking inconsistent states."
JavaScript,Cashier,11,Couplers,Message Chains,chainOfMethods,"Calls `this.chef.cleanKitchen()`, creating tight coupling."
JavaScript,Cashier,12,Couplers,Middle Man,middlemanMethod,Delegates through `middleMethod` to `realMethod` without adding value.
JavaScript,Cashier,13,Couplers,Inappropriate Intimacy,accessInternalDetails,Directly accesses internal state `this.chef.busy`.
JavaScript,Cashier,14,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Placeholder method with minimal implementation, likely meant for future use."
JavaScript,Cashier,15,Object-Orientation Abusers,Speculative Generality,applyDiscount,"Placeholder method with minimal implementation, likely meant for future use."
JavaScript,Cashier,16,Change Preventers,Divergent Change,updateContactInfo,"Changing customer info requires modifying multiple methods (e.g., `updateName`, `updateAddress`)."
JavaScript,Cashier,17,Dispensables,Data Class,N/A,"The class primarily holds data (e.g., `firstName`, `email`) with trivial methods."
JavaScript,Cashier,18,Bloaters,Long Parameter List,orderWithUnnecessaryDetails,"The method has 6 parameters, violating maintainability."
JavaScript,Cashier,19,Dispensables,Dead Code,orderWithUnnecessaryDetails,The method is defined but its functionality is redundant or unused.
Language,Class,Code Smell #,Category,Code Smell,Method,Type
C++,Shop,1,Bloaters,Large Class,N/A,"The `Shop` class handles multiple responsibilities (order handling, customer info, promotions, complaints)."
C++,Shop,2,Bloaters,Primitive Obsession,N/A,"Uses primitive types (e.g., `std::string`) for customer info instead of a dedicated `Customer` class."
C++,Shop,3,Bloaters,Data Clumps,N/A,"Groups related customer data fields (e.g., `firstName`, `email`) that could be encapsulated in a `Customer` class."
C++,Shop,4,Dispensables,Dead Code,anotherUnusedMethod,The method is declared but never defined or used.
C++,Shop,5,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Placeholder method with no implementation, likely meant for future use."
C++,Shop,6,Object-Orientation Abusers,Speculative Generality,applyDiscount,"Placeholder method with no implementation, likely meant for future use."
C++,Shop,7,Couplers,Message Chains,accessInternalDetails,"Calls `cashier->getChef()->isBusy()`, creating a deep dependency chain."
C++,Shop,8,Couplers,Inappropriate Intimacy,accessInternalDetails,"Directly accesses internal state of `cashier` and `chef`, violating encapsulation."
C++,Shop,9,Change Preventers,Divergent Change,N/A,"Changing customer info would require modifying multiple fields (`firstName`, `email`, etc.)."
C++,Shop,10,Dispensables,Data Class,N/A,"The class primarily holds data (e.g., `firstName`, `email`) with minimal behavior."
C++,Shop,11,Bloaters,Long Parameter List,orderWithUnnecessaryDetails,"The method has 6 parameters, which could be refactored into a `PizzaOrder` object."
C++,Shop,12,Dispensables,Dead Code,refusedBequest,The method is declared but never defined or used.
Language,Class,Code Smell #,Category,Code Smell,Method,Type
C++,Pizza,1,Bloaters,Large Class,N/A,"The `Pizza` class handles pizza attributes, customer info, promotions, and complaints, violating SRP."
C++,Pizza,2,Bloaters,Long Method,longMethod,The `longMethod` performs multiple unrelated tasks in a single method.
C++,Pizza,3,Bloaters,Primitive Obsession,updateCustomerInfo,Uses primitive types (`std::string`) for customer info instead of a dedicated `Customer` class.
C++,Pizza,4,Bloaters,Data Clumps,updateCustomerInfo,Groups customer data fields that should be encapsulated in a `Customer` class.
C++,Pizza,5,Bloaters,Long Parameter List,updateCustomerInfo,"The method has 5 parameters, which could be replaced with a `Customer` object."
C++,Pizza,6,Dispensables,Dead Code,anotherUnusedMethod,The method is declared but never used.
C++,Pizza,7,Dispensables,Duplicate Code,duplicateMethod,"Repeated calls to `setTopping(""Cheese"")` with identical arguments."
C++,Pizza,8,Object-Orientation Abusers,Switch Statements,handleComplaint,Uses a chain of `if-else` statements to handle complaints.
C++,Pizza,9,Object-Orientation Abusers,Refused Bequest,refusedBequest,"Empty method in `Pizza`, indicating subclasses may refuse the inheritance."
C++,Pizza,10,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Placeholder method with minimal implementation, likely meant for future use."
C++,Pizza,11,Couplers,Middle Man,middlemanMethod,Delegates through `middleMethod` to `realMethod` without adding value.
C++,Pizza,12,Couplers,Message Chains,chainOfMethods,"Calls `updateCustomerAddress`, creating unnecessary dependencies."
C++,Pizza,13,Couplers,Inappropriate Intimacy,accessInternalDetails,"Directly exposes internal fields (`size`, `doughType`, `topping`)."
C++,Pizza,14,Change Preventers,Divergent Change,updateCustomerInfo,"Changing customer info requires modifying multiple methods (e.g., `updateCustomerName`, `updateCustomerAddress`)."
C++,Pizza,15,Dispensables,Data Class,N/A,"The class primarily holds data (e.g., `customerFirstName`, `email`) with trivial methods."
C++,CheesePizza,16,Object-Orientation Abusers,Refused Bequest,N/A,"Inherits from `Pizza` but does not use all inherited methods (e.g., `refusedBequest`)."
Language,Class,Code Smell #,Category,Code Smell,Method,Type
C++,Drink,1,Bloaters,Data Clumps,N/A,"Related fields (customerFirstName, customerLastName, etc.) could be encapsulated into a Customer class"
C++,Drink,2,Bloaters,Long Method,longMethod,"Method handles ordering, preparation, notifications, and complaints in one place"
C++,Drink,3,Bloaters,Long Parameter List,orderWithUnnecessaryDetails,"Method has excessive parameters (drinkType, size, ice, lemon, discountCode)"
C++,Drink,4,Object-Orientation Abusers,Switch Statements,handleComplaint,"Repeated if-else chain for complaints, despite similar logging actions"
C++,Drink,5,Dispensables,Dead Code,anotherUnusedMethod,Unused method with no functionality
C++,Drink,6,Dispensables,Duplicate Code,duplicateMethod,"Repeated calls to orderDrink(""Water"")"
C++,Drink,7,Couplers,Middle Man,middlemanMethod,"Method only delegates to middleMethod, which further delegates to realMethod"
C++,Drink,8,Couplers,Feature Envy,accessInternalDetails,"Directly accesses internal fields (size, drinkType) instead of encapsulating behavior"
C++,Drink,9,Bloaters,Large Class,N/A,"Class handles drink preparation, customer info, promotions, discounts, and complaints"
C++,Drink,10,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Methods unrelated to core Drink functionality (e.g., promotions, discounts)"
C++,Drink,11,Object-Orientation Abusers,Refused Bequest,refusedBequest,Empty method inherited but not used
C++,Drink,12,Couplers,Message Chains,chainOfMethods,Initiates a chain of calls (this->cleanup())
C++,Drink,13,Dispensables,Lazy Class,N/A,Minimal core functionality mixed with unrelated responsibilities; could be split
C++,Drink,14,Dispensables,Dead Code,N/A,Private fields like tempDiscountCode and tempOrderNote are declared but never used
Language,Class,Code Smell #,Category,Code Smell,Method,Type
C++,Customer,1,Bloaters,Data Clumps,N/A,"Related fields (firstName, lastName, address, etc.) could be encapsulated into a CustomerInfo class"
C++,Customer,2,Bloaters,Long Method,longMethod,"Method handles ordering, complaints, notifications, and discounts in one place"
C++,Customer,3,Bloaters,Long Parameter List,orderWithUnnecessaryDetails,"Method has excessive parameters (pizzaType, size, crustType, toppings, etc.)"
C++,Customer,4,Object-Orientation Abusers,Switch Statements,handleComplaint,"Repeated if-else chain for complaints, despite similar logging actions"
C++,Customer,5,Dispensables,Dead Code,anotherUnusedMethod,Unused method with no functionality
C++,Customer,6,Dispensables,Duplicate Code,duplicateMethod,"Repeated calls to orderPizza(""Cheese"")"
C++,Customer,7,Couplers,Middle Man,middlemanMethod,"Method only delegates to middleMethod, which further delegates to realMethod"
C++,Customer,8,Couplers,Feature Envy,accessInternalDetails,Directly accesses internal details of PizzaShop (pizzaShop->getCashier()->hurryUpChef())
C++,Customer,9,Change Preventers,Shotgun Surgery,N/A,Multiple methods updating parts of customer info; changes require modifying all methods
C++,Customer,10,Bloaters,Large Class,N/A,"Class handles orders, complaints, notifications, discounts, and internal delegation logic"
C++,Customer,11,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Methods unrelated to core Customer responsibilities (e.g., promotions, discounts)"
C++,Customer,12,Object-Orientation Abusers,Refused Bequest,refusedBequest,Empty method inherited but not used
C++,Customer,13,Couplers,Message Chains,chainOfMethods,Initiates a chain of calls (this->accessInternalDetails())
C++,Customer,14,Dispensables,Lazy Class,N/A,Minimal core functionality mixed with unrelated responsibilities; could be split
C++,Customer,15,Dispensables,Dead Code,N/A,Private fields like tempDiscountCode and tempOrderNote are declared but never used
Language,Class,Code Smell #,Category,Code Smell,Method,Type
C++,Chef,1,Bloaters,Data Clumps,updateContactInfo,"Related fields (firstName, lastName, address, etc.) could be encapsulated into a Customer/Employee class"
C++,Chef,2,Bloaters,Long Method,longMethod,"Method handles baking, notifications, complaints, and internal delegation in one place"
C++,Chef,3,Bloaters,Long Parameter List,updateContactInfo,"Method has 5 parameters (firstName, lastName, address, phoneNumber, email)"
C++,Chef,4,Object-Orientation Abusers,Switch Statements,handleComplaint,"Repeated if-else chain for complaints, despite similar logging actions"
C++,Chef,5,Dispensables,Dead Code,anotherUnusedMethod,Unused method with no functionality
C++,Chef,6,Dispensables,Duplicate Code,duplicateMethod,"Repeated calls to bakePizza(""Cheese"")"
C++,Chef,7,Couplers,Middle Man,middlemanMethod,"Method only delegates to middleMethod, which further delegates to realMethod"
C++,Chef,8,Couplers,Feature Envy,accessInternalDetails,Directly accesses internal pizza->getTopping() instead of encapsulating behavior
C++,Chef,9,Change Preventers,Shotgun Surgery,"updateName, updateAddress, etc.",Multiple methods updating parts of customer info; changes require modifying all methods
C++,Chef,10,Bloaters,Large Class,N/A,"Class handles pizza baking, customer info, promotions, discounts, complaints, and delegation logic"
C++,Chef,11,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Methods unrelated to core Chef responsibilities (e.g., promotions, discounts)"
C++,Chef,12,Object-Orientation Abusers,Refused Bequest,refusedBequest,Empty method inherited but not used
C++,Chef,13,Couplers,Message Chains,chainOfMethods,Initiates a chain of calls (this->cleanKitchen())
C++,Chef,14,Dispensables,Dead Code,N/A,Private fields like tempDiscountCode and tempOrderNote are declared but never used
C++,Chef,15,Dispensables,Lazy Class,N/A,Minimal core functionality mixed with unrelated responsibilities; could be split
Language,Class,Code Smell #,Category,Code Smell,Method,Type
C++,Cashier,1,Bloaters,Large Class,N/A,"The `Cashier` class handles multiple responsibilities (order handling, promotions, complaints)."
C++,Cashier,2,Bloaters,Long Method,longMethod,The `longMethod` performs multiple unrelated tasks in a single method.
C++,Cashier,3,Bloaters,Primitive Obsession,N/A,Uses primitive types (`std::string`) for customer info instead of a dedicated `Customer` class.
C++,Cashier,4,Bloaters,Data Clumps,N/A,"Groups related customer data fields (e.g., `firstName`, `email`) that could be encapsulated in a `Customer` class."
C++,Cashier,5,Dispensables,Dead Code,anotherUnusedMethod,The method is declared but never used.
C++,Cashier,6,Dispensables,Duplicate Code,duplicateMethod,"Repeated calls to `takeOrder(""Cheese"")` with identical arguments."
C++,Cashier,7,Object-Orientation Abusers,Switch Statements,handleComplaint,Uses a chain of `if-else` statements to handle complaints.
C++,Cashier,8,Object-Orientation Abusers,Refused Bequest,refusedBequest,"Empty method in `Cashier`, indicating subclasses may refuse the inheritance."
C++,Cashier,9,Object-Orientation Abusers,Speculative Generality,notifyForPromotion,"Placeholder method with minimal implementation, likely meant for future use."
C++,Cashier,10,Couplers,Middle Man,middlemanMethod,Delegates through `middleMethod` to `realMethod` without adding value.
C++,Cashier,11,Couplers,Message Chains,chainOfMethods,"Calls `accessInternalDetails`, creating unnecessary dependencies."
C++,Cashier,12,Couplers,Inappropriate Intimacy,accessInternalDetails,"Directly accesses internal state of `chef`, violating encapsulation."
C++,Cashier,13,Change Preventers,Divergent Change,N/A,"Changing customer info would require modifying multiple fields (`firstName`, `email`, etc.)."
C++,Cashier,14,Dispensables,Data Class,N/A,"The class primarily holds data (e.g., `firstName`, `email`) with trivial methods."
C++,Cashier,15,Bloaters,Long Parameter List,orderWithUnnecessaryDetails,"The method has 6 parameters, which could be refactored into a `PizzaOrder` object."
C++,Cashier,16,Dispensables,Dead Code,refusedBequest,The method is declared but never used.
